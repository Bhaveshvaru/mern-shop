{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productDetailsReducers, productReducers } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducers, userRegisterReducers, userDetailsReducers, updateUserProfileReducers } from \"./reducers/userReducers\";\nimport { orderCreateReducers, orderDetailsReducer, orderPayReducer } from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  productList: productReducers,\n  productDetails: productDetailsReducers,\n  cart: cartReducer,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userDetails: userDetailsReducers,\n  userUpdateProfile: updateUserProfileReducers,\n  orderCreate: orderCreateReducers,\n  orderDetails: orderDetailsReducer\n}); //initilize data from localstorage\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/bhavesh/Desktop/mern Project/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducers","productReducers","cartReducer","userLoginReducers","userRegisterReducers","userDetailsReducers","updateUserProfileReducers","orderCreateReducers","orderDetailsReducer","orderPayReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,sBADF,EAEEC,eAFF,QAGO,4BAHP;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAAQC,iBAAR,EAA0BC,oBAA1B,EAA+CC,mBAA/C,EAAmEC,yBAAnE,QAAmG,yBAAnG;AACA,SAAQC,mBAAR,EAA4BC,mBAA5B,EAAgDC,eAAhD,QAAsE,0BAAtE;AAEA,MAAMC,OAAO,GAAGd,eAAe,CAAC;AAC9Be,EAAAA,WAAW,EAAEV,eADiB;AAE9BW,EAAAA,cAAc,EAAEZ,sBAFc;AAG9Ba,EAAAA,IAAI,EAAEX,WAHwB;AAI9BY,EAAAA,SAAS,EAACX,iBAJoB;AAK9BY,EAAAA,YAAY,EAACX,oBALiB;AAM9BY,EAAAA,WAAW,EAACX,mBANkB;AAO9BY,EAAAA,iBAAiB,EAACX,yBAPY;AAQ9BY,EAAAA,WAAW,EAACX,mBARkB;AAS9BY,EAAAA,YAAY,EAACX;AATiB,CAAD,CAA/B,C,CAYA;;AACA,MAAMY,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIE,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GAE1B,IAFF;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,GAEjC,EAFF;AAIF,MAAMK,YAAY,GAAG;AACnBd,EAAAA,IAAI,EAAE;AAAEe,IAAAA,SAAS,EAAER,oBAAb;AAAmCS,IAAAA,eAAe,EAACH;AAAnD,GADa;AAEnBZ,EAAAA,SAAS,EAAC;AAACgB,IAAAA,QAAQ,EAACL;AAAV;AAFS,CAArB;AAKA,MAAMM,UAAU,GAAG,CAACjC,KAAD,CAAnB;AAEA,MAAMkC,KAAK,GAAGrC,WAAW,CACvBe,OADuB,EAEvBiB,YAFuB,EAGvB5B,mBAAmB,CAACF,eAAe,CAAC,GAAGkC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productDetailsReducers,\n  productReducers,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {userLoginReducers,userRegisterReducers,userDetailsReducers,updateUserProfileReducers} from \"./reducers/userReducers\"\nimport {orderCreateReducers,orderDetailsReducer,orderPayReducer} from \"./reducers/orderReducers\"\n\nconst reducer = combineReducers({\n  productList: productReducers,\n  productDetails: productDetailsReducers,\n  cart: cartReducer,\n  userLogin:userLoginReducers,\n  userRegister:userRegisterReducers,\n  userDetails:userDetailsReducers,\n  userUpdateProfile:updateUserProfileReducers,\n  orderCreate:orderCreateReducers,\n  orderDetails:orderDetailsReducer\n})\n\n//initilize data from localstorage\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\n  const userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\n  const shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: { cartItems: cartItemsFromStorage ,shippingAddress:shippingAddressFromStorage},\n  userLogin:{userInfo:userInfoFromStorage}\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}