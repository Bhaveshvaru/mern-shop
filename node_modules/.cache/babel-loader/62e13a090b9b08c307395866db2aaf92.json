{"ast":null,"code":"var _jsxFileName = \"/Users/bhavesh/Desktop/mern Project/frontend/src/screens/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = () => {\n  _s();\n\n  let history = useNavigate();\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails; //setting the state \n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (!userInfo) {\n      history('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [history, userInfo, dispatch, user]); // sunmit handler \n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage(\"Password do not match\");\n    } else {// update profile \n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Profile \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 10\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-2\",\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => {\n              setName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-2\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-2\",\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm  Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: confirmPassword,\n            onChange: e => {\n              setConfirmPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"pt-2\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 6\n  }, this);\n};\n\n_s(ProfileScreen, \"jLO3ndCyyjWhITcM1RmSva6LyR0=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/Users/bhavesh/Desktop/mern Project/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","useNavigate","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","ProfileScreen","history","dispatch","userDetails","state","loading","error","user","email","setEmail","password","setPassword","name","setName","confirmPassword","setConfirmPassword","message","setMessage","userLogin","userInfo","getUserDetails","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {useNavigate} from \"react-router-dom\"\nimport {Form,Button,Row,Col} from \"react-bootstrap\"\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\"\nimport {  } from '../actions/userActions';\n\nconst ProfileScreen = () => {\n    let history = useNavigate()\n    const dispatch = useDispatch();\n    const userDetails = useSelector(state => state.userDetails)\n    const {loading , error , user} = userDetails\n    //setting the state \n    const [email,setEmail] = useState('');\n    const [password,setPassword] = useState('')\n    const [name,setName] = useState('')\n    const [confirmPassword,setConfirmPassword] = useState('')\n    const [message,setMessage] = useState('')\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n \n\n    useEffect(()=>{\n        if(!userInfo){\n            history('/login')\n        }else{\n            if(!user.name){\n                dispatch(getUserDetails('profile'))\n            }else{\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    },[history,userInfo,dispatch,user])\n\n    // sunmit handler \n    const submitHandler = (e)=>{\n        e.preventDefault();\n\n        if(password !== confirmPassword){\n            setMessage(\"Password do not match\")\n        }else {\n            // update profile \n        }\n       \n        \n\n    }\n\n  return (\n     <Row>\n         <Col md={3}>\n         <h1>User Profile </h1>\n          {message && <Message variant='danger'>{message}</Message>}\n          {error && <Message variant='danger'>{error}</Message>}\n          {loading && <Loader />}\n          <Form onSubmit={submitHandler}>\n\n          <Form.Group className='mb-2' controlId='name'>\n                  <Form.Label>\n                    Name\n                  </Form.Label>\n                  <Form.Control type='name' placeholder='Enter name'\n                  value={name}\n                  onChange={(e)=>{setName(e.target.value)}} >\n                  </Form.Control>\n              </Form.Group>\n\n\n              <Form.Group controlId='email'>\n                  <Form.Label>\n                    Email Address\n                  </Form.Label>\n                  <Form.Control type='email' placeholder='Enter email'\n                  value={email}\n                  onChange={(e)=>{setEmail(e.target.value)}} >\n                  </Form.Control>\n              </Form.Group>\n\n              <Form.Group className='mb-2' controlId='password'>\n                  <Form.Label>\n                    Password\n                  </Form.Label>\n                  <Form.Control type='password' placeholder='Enter password'\n                  value={password}\n                  onChange={(e)=>{setPassword(e.target.value)}} >\n                  </Form.Control>\n              </Form.Group>\n\n              <Form.Group className='mb-2' controlId='confirmPassword'>\n                  <Form.Label>\n                   Confirm  Password\n                  </Form.Label>\n                  <Form.Control type='password' placeholder='Confirm Password'\n                  value={confirmPassword}\n                  onChange={(e)=>{setConfirmPassword(e.target.value)}} >\n                  </Form.Control>\n              </Form.Group>\n\n              <Button type='submit' variant='primary' className='pt-2'>\n                  Update\n              </Button>\n          </Form>\n         </Col>\n         <Col md={9}>\n             <h2>My Orders</h2>\n         </Col>\n     </Row>\n  );\n};\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}