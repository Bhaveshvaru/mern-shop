{"ast":null,"code":"import _slicedToArray from\"/Users/bhavesh/Desktop/mern Project/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{Form,Button,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import{savePaymentMethod}from'../actions/cartActions';import CheckoutSteps from'../components/CheckoutSteps';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PaymentScreen=function PaymentScreen(){var history=useNavigate();var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress){history('/shipping');}var _useState=useState('paypal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history('/placeorder');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"PayPal or Credit Card\",id:\"paypal\",name:\"paymentMethod\",value:\"PayPal\",checked:true,onChange:function onChange(e){setPaymentMethod(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",className:\"mt-4\",children:\"Continue\"})]})]});};export default PaymentScreen;","map":{"version":3,"sources":["/Users/bhavesh/Desktop/mern Project/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","useNavigate","Form","Button","Col","useDispatch","useSelector","FormContainer","savePaymentMethod","CheckoutSteps","PaymentScreen","history","cart","state","shippingAddress","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":"kIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,KAAkC,iBAAlC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,iBAAT,KAAkC,wBAAlC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,GAAIC,CAAAA,OAAO,CAAGV,WAAW,EAAzB,CACF,GAAMW,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CACA,GAAQE,CAAAA,eAAR,CAA4BF,IAA5B,CAAQE,eAAR,CACA,GAAI,CAACA,eAAL,CAAsB,CACpBH,OAAO,CAAC,WAAD,CAAP,CACD,CAED,cAA0CX,QAAQ,CAAC,QAAD,CAAlD,wCAAOe,aAAP,eAAsBC,gBAAtB,eACA,GAAMC,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CACA,GAAMa,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3BA,CAAC,CAACC,cAAF,GACAH,QAAQ,CAACT,iBAAiB,CAACO,aAAD,CAAlB,CAAR,CACAJ,OAAO,CAAC,aAAD,CAAP,CACD,CAJD,CAMA,mBACE,MAAC,aAAD,yBACE,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADF,cAEE,sCAFF,cAGE,MAAC,IAAD,EAAM,QAAQ,CAAEO,aAAhB,wBACE,MAAC,IAAD,CAAM,KAAN,yBACE,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADF,cAEA,KAAC,GAAD,wBACA,KAAC,IAAD,CAAM,KAAN,EAAY,IAAI,CAAC,OAAjB,CAAyB,KAAK,CAAC,uBAA/B,CAAuD,EAAE,CAAC,QAA1D,CAAmE,IAAI,CAAC,eAAxE,CAAwF,KAAK,CAAC,QAA9F,CAAuG,OAAO,KAA9G,CACC,QAAQ,CAAE,kBAACC,CAAD,CAAK,CAACH,gBAAgB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAhB,CAAkC,CADnD,EADA,EAFA,GADF,cASE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,CAAwC,SAAS,CAAC,MAAlD,sBATF,GAHF,GADF,CAmBD,CAnCD,CAqCA,cAAeZ,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport { savePaymentMethod } from '../actions/cartActions'\nimport CheckoutSteps from '../components/CheckoutSteps'\n\nconst PaymentScreen = () => {\n    let history = useNavigate()\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n  if (!shippingAddress) {\n    history('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('paypal')\n  const dispatch = useDispatch()\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n        <Col>\n        <Form.Check type=\"radio\" label=\"PayPal or Credit Card\" id=\"paypal\" name=\"paymentMethod\" value=\"PayPal\" checked \n         onChange={(e)=>{setPaymentMethod(e.target.value) }} >\n        </Form.Check>\n        </Col>\n        </Form.Group>\n        <Button type='submit' variant='primary' className='mt-4'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n"]},"metadata":{},"sourceType":"module"}