{"ast":null,"code":"var _jsxFileName = \"/Users/bhavesh/Desktop/mern Project/frontend/src/screens/RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { register } from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterScreen = () => {\n  _s();\n\n  let history = useNavigate();\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userRegister; //setting the state \n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const redirect = history.search ? history.search.split('=')[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      history(redirect);\n    }\n  }, [history, userInfo, redirect]); // sunmit handler \n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage(\"Password do not match\");\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-2\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"name\",\n          placeholder: \"Enter name\",\n          value: name,\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: e => {\n            setEmail(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-2\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter password\",\n          value: password,\n          onChange: e => {\n            setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-2\",\n        controlId: \"confirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm  Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => {\n            setConfirmPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: \"pt-2\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Have an Account?\", /*#__PURE__*/_jsxDEV(Link, {\n            to: redirect ? `/login?redirect=${redirect}` : `/login`,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n\n_s(RegisterScreen, \"OLDvnqVeRKaWfsBWbrVj5b4FTs0=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["/Users/bhavesh/Desktop/mern Project/frontend/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","useNavigate","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","register","FormContainer","RegisterScreen","history","dispatch","userRegister","state","loading","error","userInfo","email","setEmail","password","setPassword","name","setName","confirmPassword","setConfirmPassword","message","setMessage","redirect","search","split","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Link, useNavigate} from \"react-router-dom\"\nimport {Form,Button,Row,Col} from \"react-bootstrap\"\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\"\nimport { register } from '../actions/userActions';\nimport FormContainer from '../components/FormContainer'\n\nconst RegisterScreen = () => {\n    let history = useNavigate()\n    const dispatch = useDispatch();\n    const userRegister = useSelector(state => state.userRegister)\n    const {loading , error , userInfo} = userRegister\n    //setting the state \n    const [email,setEmail] = useState('');\n    const [password,setPassword] = useState('')\n    const [name,setName] = useState('')\n    const [confirmPassword,setConfirmPassword] = useState('')\n    const [message,setMessage] = useState('')\n\n\n    const redirect = history.search ? history.search.split('=')[1] : '/'\n\n    useEffect(()=>{\n        if(userInfo){\n            history(redirect)\n        }\n    },[history,userInfo,redirect])\n\n    // sunmit handler \n    const submitHandler = (e)=>{\n        e.preventDefault();\n\n        if(password !== confirmPassword){\n            setMessage(\"Password do not match\")\n        }else {\n            dispatch(register(name,email,password))\n        }\n       \n        \n\n    }\n\n  return (\n      <FormContainer>\n          <h1>Sign Up</h1>\n          {message && <Message variant='danger'>{message}</Message>}\n          {error && <Message variant='danger'>{error}</Message>}\n          {loading && <Loader />}\n          <Form onSubmit={submitHandler}>\n\n          <Form.Group className='mb-2' controlId='name'>\n                  <Form.Label>\n                    Name\n                  </Form.Label>\n                  <Form.Control type='name' placeholder='Enter name'\n                  value={name}\n                  onChange={(e)=>{setName(e.target.value)}} >\n                  </Form.Control>\n              </Form.Group>\n\n\n              <Form.Group controlId='email'>\n                  <Form.Label>\n                    Email Address\n                  </Form.Label>\n                  <Form.Control type='email' placeholder='Enter email'\n                  value={email}\n                  onChange={(e)=>{setEmail(e.target.value)}} >\n                  </Form.Control>\n              </Form.Group>\n\n              <Form.Group className='mb-2' controlId='password'>\n                  <Form.Label>\n                    Password\n                  </Form.Label>\n                  <Form.Control type='password' placeholder='Enter password'\n                  value={password}\n                  onChange={(e)=>{setPassword(e.target.value)}} >\n                  </Form.Control>\n              </Form.Group>\n\n              <Form.Group className='mb-2' controlId='confirmPassword'>\n                  <Form.Label>\n                   Confirm  Password\n                  </Form.Label>\n                  <Form.Control type='password' placeholder='Confirm Password'\n                  value={confirmPassword}\n                  onChange={(e)=>{setConfirmPassword(e.target.value)}} >\n                  </Form.Control>\n              </Form.Group>\n\n              <Button type='submit' variant='primary' className='pt-2'>\n                  Sign Up\n              </Button>\n          </Form>\n          <Row className='py-3'>\n              <Row>\n                  <Col>\n                  Have an Account? \n                  <Link to={redirect ? `/login?redirect=${redirect}` : `/login`}\n                  >Login</Link>\n                  </Col>\n              </Row>\n\n          </Row>\n      </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n"]},"metadata":{},"sourceType":"module"}