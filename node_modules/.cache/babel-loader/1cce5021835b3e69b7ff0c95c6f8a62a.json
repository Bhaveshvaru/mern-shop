{"ast":null,"code":"import { ORDER_CREATE_SUCCESS, ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL } from \"../constants/orderConstants\";\nimport axios from \"axios\";\nimport { USER_LOGOUT } from \"../constants/userConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${id}/pay`, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/bhavesh/Desktop/mern Project/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_SUCCESS","ORDER_CREATE_REQUEST","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","axios","USER_LOGOUT","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","message","response","logout","localStorage","removeItem","getOrderDetails","id","get","payOrder","paymentResult","ORDER_PAY_REQUEST","put","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL"],"mappings":"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","sourcesContent":["import {\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL\n} from \"../constants/orderConstants\" \nimport axios from \"axios\"\nimport { USER_LOGOUT } from \"../constants/userConstants\"\n\n export const createOrder = (order) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ORDER_CREATE_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.post(`/api/orders`, order, config)\n  \n   \n      dispatch({\n        type: ORDER_CREATE_SUCCESS,\n        payload: data,\n      })\n\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n      }\n      dispatch({\n        type: ORDER_CREATE_FAIL,\n        payload: message,\n      })\n    }\n    \n  }\n  export const logout = ()=> async(dispatch)=>{\n    localStorage.removeItem('userInfo')\n    dispatch({type:USER_LOGOUT})\n    }\n\n\n\n    export const getOrderDetails = (id) => async (dispatch, getState) => {\n        try {\n          dispatch({\n            type: ORDER_DETAILS_REQUEST,\n          })\n      \n          const {\n            userLogin: { userInfo },\n          } = getState()\n      \n          const config = {\n            headers: {\n              Authorization: `Bearer ${userInfo.token}`,\n            },\n          }\n      \n          const { data } = await axios.get(`/api/orders/${id}`, config)\n      \n       \n          dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data,\n          })\n    \n        } catch (error) {\n          const message =\n            error.response && error.response.data.message\n              ? error.response.data.message\n              : error.message\n          if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n          }\n          dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: message,\n          })\n        }\n        \n      }\n\n      export const payOrder = (order,paymentResult) => async (dispatch, getState) => {\n        try {\n          dispatch({\n            type: ORDER_PAY_REQUEST,\n          })\n      \n          const {\n            userLogin: { userInfo },\n          } = getState()\n      \n          const config = {\n            headers: {\n                'Content-Type': 'application/json',\n              Authorization: `Bearer ${userInfo.token}`,\n            },\n          }\n      \n          const { data } = await axios.put(`/api/orders/${id}/pay`, config)\n      \n       \n          dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data,\n          })\n    \n        } catch (error) {\n          const message =\n            error.response && error.response.data.message\n              ? error.response.data.message\n              : error.message\n          if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n          }\n          dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: message,\n          })\n        }\n        \n      }"]},"metadata":{},"sourceType":"module"}