{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productDetailsReducers, productReducers } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productReducers,\n  productDetails: productDetailsReducers,\n  cart: cartReducer\n}); //initilize data from localstorage \n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/bhavesh/Desktop/mern Project/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducers","productReducers","cartReducer","reducer","productList","productDetails","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,sBADF,EAEEC,eAFF,QAGO,4BAHP;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC9BQ,EAAAA,WAAW,EAAEH,eADiB;AAE9BI,EAAAA,cAAc,EAAEL,sBAFc;AAG9BM,EAAAA,IAAI,EAAEJ;AAHwB,CAAD,CAA/B,C,CAMA;;AACA,MAAMK,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAjH;AAEA,MAAMG,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACf,KAAD,CAAnB;AAEA,MAAMgB,KAAK,GAAGnB,WAAW,CACvBQ,OADuB,EAEvBS,YAFuB,EAGvBb,mBAAmB,CAACF,eAAe,CAAC,GAAGgB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productDetailsReducers,\n  productReducers,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\n\nconst reducer = combineReducers({\n  productList: productReducers,\n  productDetails: productDetailsReducers,\n  cart: cartReducer,\n})\n\n//initilize data from localstorage \nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}