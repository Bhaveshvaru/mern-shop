{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from'redux';import thunk from'redux-thunk';import{composeWithDevTools}from'redux-devtools-extension';import{productDetailsReducers,productReducers}from'./reducers/productReducers';import{cartReducer}from'./reducers/cartReducers';import{userLoginReducers,userRegisterReducers,userDetailsReducers,updateUserProfileReducers}from\"./reducers/userReducers\";import{orderCreateReducers,orderDetailsReducer,orderPayReducer}from\"./reducers/orderReducers\";var reducer=combineReducers({productList:productReducers,productDetails:productDetailsReducers,cart:cartReducer,userLogin:userLoginReducers,userRegister:userRegisterReducers,userDetails:userDetailsReducers,userUpdateProfile:updateUserProfileReducers,orderCreate:orderCreateReducers,orderDetails:orderDetailsReducer,orderPay:orderPayReducer});//initilize data from localstorage\nvar cartItemsFromStorage=localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[];var userInfoFromStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null;var shippingAddressFromStorage=localStorage.getItem('shippingAddress')?JSON.parse(localStorage.getItem('shippingAddress')):{};var initialState={cart:{cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage},userLogin:{userInfo:userInfoFromStorage}};var middleware=[thunk];var store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["/Users/bhavesh/Desktop/mern Project/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducers","productReducers","cartReducer","userLoginReducers","userRegisterReducers","userDetailsReducers","updateUserProfileReducers","orderCreateReducers","orderDetailsReducer","orderPayReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OACEC,sBADF,CAEEC,eAFF,KAGO,4BAHP,CAIA,OAASC,WAAT,KAA4B,yBAA5B,CACA,OAAQC,iBAAR,CAA0BC,oBAA1B,CAA+CC,mBAA/C,CAAmEC,yBAAnE,KAAmG,yBAAnG,CACA,OAAQC,mBAAR,CAA4BC,mBAA5B,CAAgDC,eAAhD,KAAsE,0BAAtE,CAEA,GAAMC,CAAAA,OAAO,CAAGd,eAAe,CAAC,CAC9Be,WAAW,CAAEV,eADiB,CAE9BW,cAAc,CAAEZ,sBAFc,CAG9Ba,IAAI,CAAEX,WAHwB,CAI9BY,SAAS,CAACX,iBAJoB,CAK9BY,YAAY,CAACX,oBALiB,CAM9BY,WAAW,CAACX,mBANkB,CAO9BY,iBAAiB,CAACX,yBAPY,CAQ9BY,WAAW,CAACX,mBARkB,CAS9BY,YAAY,CAACX,mBATiB,CAU9BY,QAAQ,CAACX,eAVqB,CAAD,CAA/B,CAaA;AACA,GAAMY,CAAAA,oBAAoB,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,EACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,CAEzB,EAFJ,CAIE,GAAMG,CAAAA,mBAAmB,CAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,EAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,CAE1B,IAFF,CAIA,GAAMI,CAAAA,0BAA0B,CAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,EACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,CAEjC,EAFF,CAIF,GAAMK,CAAAA,YAAY,CAAG,CACnBf,IAAI,CAAE,CAAEgB,SAAS,CAAER,oBAAb,CAAmCS,eAAe,CAACH,0BAAnD,CADa,CAEnBb,SAAS,CAAC,CAACiB,QAAQ,CAACL,mBAAV,CAFS,CAArB,CAKA,GAAMM,CAAAA,UAAU,CAAG,CAAClC,KAAD,CAAnB,CAEA,GAAMmC,CAAAA,KAAK,CAAGtC,WAAW,CACvBe,OADuB,CAEvBkB,YAFuB,CAGvB7B,mBAAmB,CAACF,eAAe,MAAf,QAAmBmC,UAAnB,CAAD,CAHI,CAAzB,CAMA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productDetailsReducers,\n  productReducers,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {userLoginReducers,userRegisterReducers,userDetailsReducers,updateUserProfileReducers} from \"./reducers/userReducers\"\nimport {orderCreateReducers,orderDetailsReducer,orderPayReducer} from \"./reducers/orderReducers\"\n\nconst reducer = combineReducers({\n  productList: productReducers,\n  productDetails: productDetailsReducers,\n  cart: cartReducer,\n  userLogin:userLoginReducers,\n  userRegister:userRegisterReducers,\n  userDetails:userDetailsReducers,\n  userUpdateProfile:updateUserProfileReducers,\n  orderCreate:orderCreateReducers,\n  orderDetails:orderDetailsReducer,\n  orderPay:orderPayReducer\n})\n\n//initilize data from localstorage\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\n  const userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\n  const shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: { cartItems: cartItemsFromStorage ,shippingAddress:shippingAddressFromStorage},\n  userLogin:{userInfo:userInfoFromStorage}\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}