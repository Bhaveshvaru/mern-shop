{"ast":null,"code":"var _jsxFileName = \"/Users/bhavesh/Desktop/mern Project/frontend/src/screens/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport { Link, useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport { addToCart } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CartScreen = _ref => {\n  _s();\n\n  let {\n    location\n  } = _ref;\n  let {\n    id\n  } = useParams();\n  let history = useNavigate();\n  const [searchParams] = useSearchParams();\n  const productId = id;\n  const qty = searchParams.get('qty');\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  console.log('check', cartItems);\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Shopping Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n          children: [\"Your Card is Empty.\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: cartItems.map(item => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  src: item.image,\n                  alt: item.name,\n                  fluid: true,\n                  rounded: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/product/${item.product}`,\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                children: [\"$\", item.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  value: qty,\n                  onChange: e => {\n                    dispatch(addToCart(item.product), Number(e.target.value));\n                  },\n                  children: [...Array(item.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: x + 1,\n                    children: x + 1\n                  }, x + 1, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"light\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this)\n          }, item.product, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CartScreen, \"1zGui+YJZzcDhJdrznNTcp6n6b4=\", false, function () {\n  return [useParams, useNavigate, useSearchParams, useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/Users/bhavesh/Desktop/mern Project/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","useDispatch","useSelector","Message","Link","useParams","useNavigate","useSearchParams","Row","Col","ListGroup","Image","Form","Button","Card","addToCart","CartScreen","location","id","history","searchParams","productId","qty","get","dispatch","cart","state","cartItems","console","log","length","map","item","image","name","product","price","e","Number","target","value","Array","countInStock","keys","x"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,WAA1B,EAAuCC,eAAvC,QAA8D,kBAA9D;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,KAA9B,EAAqCC,IAArC,EAA2CC,MAA3C,EAAmDC,IAAnD,QAA+D,iBAA/D;AACA,SAASC,SAAT,QAA0B,wBAA1B;;;;AAEA,MAAMC,UAAU,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACnC,MAAI;AAAEC,IAAAA;AAAF,MAASb,SAAS,EAAtB;AACA,MAAIc,OAAO,GAAGb,WAAW,EAAzB;AACA,QAAM,CAACc,YAAD,IAAiBb,eAAe,EAAtC;AACA,QAAMc,SAAS,GAAGH,EAAlB;AACA,QAAMI,GAAG,GAAGF,YAAY,CAACG,GAAb,CAAiB,KAAjB,CAAZ;AACA,QAAMC,QAAQ,GAAGvB,WAAW,EAA5B;AACA,QAAMwB,IAAI,GAAGvB,WAAW,CAAEwB,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAgBF,IAAtB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,SAArB;AACA3B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,SAAJ,EAAe;AACbG,MAAAA,QAAQ,CAACT,SAAS,CAACM,SAAD,EAAYC,GAAZ,CAAV,CAAR;AACD;AACF,GAJQ,EAIN,CAACE,QAAD,EAAWH,SAAX,EAAsBC,GAAtB,CAJM,CAAT;AAMA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGK,SAAS,CAACG,MAAV,KAAqB,CAArB,gBACC,QAAC,OAAD;AAAA,yDACqB,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADrB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAKC,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,OAAnB;AAAA,oBACGH,SAAS,CAACI,GAAV,CAAeC,IAAD,iBACb,QAAC,SAAD,CAAW,IAAX;AAAA,mCACE,QAAC,GAAD;AAAA,sCACE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,uCACE,QAAC,KAAD;AACE,kBAAA,GAAG,EAAEA,IAAI,CAACC,KADZ;AAEE,kBAAA,GAAG,EAAED,IAAI,CAACE,IAFZ;AAGE,kBAAA,KAAK,MAHP;AAIE,kBAAA,OAAO;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eASE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAG,YAAWF,IAAI,CAACG,OAAQ,EAAnC;AAAA,4BAAuCH,IAAI,CAACE;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBATF,eAYE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,gCAAcF,IAAI,CAACI,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF,eAaE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,uCACE,QAAC,IAAD,CAAM,OAAN;AACE,kBAAA,EAAE,EAAC,QADL;AAEE,kBAAA,KAAK,EAAEd,GAFT;AAGE,kBAAA,QAAQ,EAAGe,CAAD,IAAO;AACfb,oBAAAA,QAAQ,CACNT,SAAS,CAACiB,IAAI,CAACG,OAAN,CADH,EAENG,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAFA,CAAR;AAID,mBARH;AAAA,4BAUG,CAAC,GAAGC,KAAK,CAACT,IAAI,CAACU,YAAN,CAAL,CAAyBC,IAAzB,EAAJ,EAAqCZ,GAArC,CAA0Ca,CAAD,iBACxC;AAAoB,oBAAA,KAAK,EAAEA,CAAC,GAAG,CAA/B;AAAA,8BACGA,CAAC,GAAG;AADP,qBAAaA,CAAC,GAAG,CAAjB;AAAA;AAAA;AAAA;AAAA,0BADD;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAbF,eA+BE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,uCACI,QAAC,MAAD;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,aAAqBZ,IAAI,CAACG,OAA1B;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAqDE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,cArDF,eAsDE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,cAtDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA4DD,CA5ED;;GAAMnB,U;UACSX,S,EACCC,W,EACSC,e,EAGNN,W,EACJC,W;;;KAPTc,U;AA8EN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport { Link, useParams, useNavigate, useSearchParams } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport { addToCart } from '../actions/cartActions'\n\nconst CartScreen = ({ location }) => {\n  let { id } = useParams()\n  let history = useNavigate()\n  const [searchParams] = useSearchParams()\n  const productId = id\n  const qty = searchParams.get('qty')\n  const dispatch = useDispatch()\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n  console.log('check', cartItems)\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  return (\n    <>\n      <Row>\n        <Col md={8}>\n          <h1>Shopping Cart</h1>\n          {cartItems.length === 0 ? (\n            <Message>\n              Your Card is Empty.<Link to='/'>Go Back</Link>\n            </Message>\n          ) : (\n            <ListGroup variant='flush'>\n              {cartItems.map((item) => (\n                <ListGroup.Item key={item.product}>\n                  <Row>\n                    <Col md={2}>\n                      <Image\n                        src={item.image}\n                        alt={item.name}\n                        fluid\n                        rounded\n                      ></Image>\n                    </Col>\n                    <Col md={3}>\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\n                    </Col>\n                    <Col md={2}>${item.price}</Col>\n                    <Col md={2}>\n                      <Form.Control\n                        as='select'\n                        value={qty}\n                        onChange={(e) => {\n                          dispatch(\n                            addToCart(item.product),\n                            Number(e.target.value)\n                          )\n                        }}\n                      >\n                        {[...Array(item.countInStock).keys()].map((x) => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                    <Col md={2}>\n                        <Button type='button' variant='light'>\n\n                        </Button>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          )}\n        </Col>\n        <Col md={2}></Col>\n        <Col md={2}></Col>\n      </Row>\n    </>\n  )\n}\n\nexport default CartScreen\n"]},"metadata":{},"sourceType":"module"}