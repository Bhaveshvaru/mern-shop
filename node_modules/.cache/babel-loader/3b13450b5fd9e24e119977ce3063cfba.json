{"ast":null,"code":"import axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_REQUEST } from \"../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, {}, config);\n    dispatch({\n      type: USER_UPDA,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/bhavesh/Desktop/mern Project/frontend/src/actions/userActions.js"],"names":["axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_REQUEST","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","updateUserProfile","user","getState","userLogin","userInfo","Authorization","token","put","USER_UPDA"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_REQUEST } from \"../constants/userConstants\"\n\nexport const login = (email , password) => async (dispatch)=>{\n    try {\n\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n        const config = {\n            headers:{\n                'Content-Type':\"application/json\"\n            }\n        }\n        const { data } = await axios.post('/api/users/login',{\n            email,password\n        },config)\n\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo',JSON.stringify(data))\n        \n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n           error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n        })\n    }\n\n}\n\nexport const logout = ()=> async(dispatch)=>{\nlocalStorage.removeItem('userInfo')\ndispatch({type:USER_LOGOUT})\n}\n\nexport const register = (name,email , password) => async (dispatch)=>{\n    try {\n\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n        const config = {\n            headers:{\n                'Content-Type':\"application/json\"\n            }\n        }\n        const { data } = await axios.post('/api/users',{\n           name, email,password\n        },config)\n\n        dispatch({\n            type:USER_REGISTER_SUCCESS,\n            payload:data\n        })\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo',JSON.stringify(data))\n        \n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n           error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n        })\n    }\n\n}\n\n\n\nexport const updateUserProfile = (user) => async (dispatch,getState)=>{\n    try {\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n        const {userLogin:{userInfo}} =getState()\n        const config = {\n            headers:{\n                'Content-Type':\"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.put(`/api/users/profile`,user,{\n        },config)\n\n        dispatch({\n            type:USER_UPDA,\n            payload:data\n        })\n        \n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload:\n           error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n        })\n    }\n\n}"]},"metadata":{},"sourceType":"module"}