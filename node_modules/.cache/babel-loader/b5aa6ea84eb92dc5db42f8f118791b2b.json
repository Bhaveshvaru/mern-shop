{"ast":null,"code":"var _jsxFileName = \"/Users/bhavesh/Desktop/mern Project/frontend/src/screens/ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport { useParams, Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProductDetails } from '../actions/productActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductScreen() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const [qty, setQty] = useState(0);\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    product,\n    error,\n    loading\n  } = productDetails;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listProductDetails(id));\n  }, [dispatch, id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-dark my-3\",\n      to: \"/\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: product.rating,\n              text: `${product.numReviews} reviews`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Price : $\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Description : \", product.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"$\", product.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Qty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    value: qty,\n                    onChange: e => {\n                      setQty(e.target.value);\n                    },\n                    children: \"[...Array(product.countInStock).keys()].map()\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn-block\",\n                    type: \"button\",\n                    disabled: product.countInStock === 0,\n                    children: \"Add To Cart\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductScreen, \"cNLQqAVNGkZU9TGIPV9sz2M4n0w=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["/Users/bhavesh/Desktop/mern Project/frontend/src/screens/ProductScreen.js"],"names":["React","useEffect","useState","Row","Col","Image","ListGroup","Card","Button","Rating","useParams","Link","useDispatch","useSelector","listProductDetails","Message","Loader","ProductScreen","id","qty","setQty","productDetails","state","product","error","loading","dispatch","image","name","rating","numReviews","price","description","countInStock","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport { useParams, Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProductDetails } from '../actions/productActions'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\nfunction ProductScreen() {\n  let { id } = useParams()\n  const [qty, setQty] = useState(0)\n  const productDetails = useSelector((state) => state.productDetails)\n  const { product, error, loading } = productDetails\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(listProductDetails(id))\n  }, [dispatch, id])\n\n  return (\n    <div>\n      <Link className='btn btn-dark my-3' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader></Loader>\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Row>\n          <Col md={6}>\n            <Image src={product.image} alt={product.name} fluid />\n          </Col>\n\n          <Col md={6}>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating\n                  value={product.rating}\n                  text={`${product.numReviews} reviews`}\n                />\n              </ListGroup.Item>\n              <ListGroup.Item>Price : ${product.price}</ListGroup.Item>\n              <ListGroup.Item>\n                Description : {product.description}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={6}>\n            <Card>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price:</Col>\n                    <Col>\n                      <strong>${product.price}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status:</Col>\n                    <Col>\n                      {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Qty</Col>\n                      <Col>\n                        <Form.Control\n                          as='select'\n                          value={qty}\n                          onChange={(e) => {\n                            setQty(e.target.value)\n                          }}\n                        >\n                          [...Array(product.countInStock).keys()].map()\n                        </Form.Control>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                )}\n\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status:</Col>\n                    <Col>\n                      <Button\n                        className='btn-block'\n                        type='button'\n                        disabled={product.countInStock === 0}\n                      >\n                        Add To Cart\n                      </Button>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </div>\n  )\n}\n\nexport default ProductScreen\n"]},"metadata":{},"sourceType":"module"}