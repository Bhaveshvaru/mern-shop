{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants';\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        shippingAddress: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};","map":{"version":3,"sources":["/Users/bhavesh/Desktop/mern Project/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter","shippingAddress"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,EAAyCC,0BAAzC,QAA2E,4BAA3E;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAyC;AAAA,MAAxCC,KAAwC,uEAAhC;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAgC;AAAA,MAAXC,MAAW;;AAClE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,aAAL;AACE,YAAMQ,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AACA,UAAIH,SAAJ,EAAe;AACb,eAAO,EACL,GAAGN,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAqBF,CAAD,IAC7BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADhC;AAFN,SAAP;AAMD,OAPD,MAOO;AACL,eAAO,EACL,GAAGR,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAFN,SAAP;AAID;;AACH,SAAKP,gBAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAwBH,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAnD;AAFN,OAAP;;AAKA,SAAKP,0BAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELY,QAAAA,eAAe,EAAEV,MAAM,CAACG;AAFnB,OAAP;;AAKJ;AACE,aAAO,EAAE,GAAGL;AAAL,OAAP;AA9BJ;AAgCD,CAjCM","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [] , }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n\n      case CART_SAVE_SHIPPING_ADDRESS:\n        return {\n          ...state,\n          shippingAddress: action.payload,\n        }\n\n    default:\n      return { ...state }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}