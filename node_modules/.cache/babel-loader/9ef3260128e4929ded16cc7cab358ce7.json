{"ast":null,"code":"import _slicedToArray from\"/Users/bhavesh/Desktop/mern Project/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import{saveShoppingAddress}from'../actions/cartActions';import CheckoutSteps from'../components/CheckoutSteps';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ShippingScreen=function ShippingScreen(){var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var history=useNavigate();var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postalCode),_useState6=_slicedToArray(_useState5,2),postalCode=_useState6[0],setPostalCode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShoppingAddress({address:address,city:city,postalCode:postalCode,country:country}));history('/payment');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Shipping Details\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-2\",controlId:\"address\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter Address\",value:address,required:true,onChange:function onChange(e){setAddress(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-2\",controlId:\"city \",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"City\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter City\",value:city,required:true,onChange:function onChange(e){setCity(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-2\",controlId:\"postalCode\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Postal Code\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter Postal Code\",value:postalCode,required:true,onChange:function onChange(e){setPostalCode(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-2\",controlId:\"country\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Country\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter Country\",value:country,required:true,onChange:function onChange(e){setCountry(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default ShippingScreen;","map":{"version":3,"sources":["/Users/bhavesh/Desktop/mern Project/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","useNavigate","Form","Button","useDispatch","useSelector","FormContainer","saveShoppingAddress","CheckoutSteps","ShippingScreen","cart","state","shippingAddress","history","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport { saveShoppingAddress } from '../actions/cartActions'\nimport CheckoutSteps from '../components/CheckoutSteps'\n\nconst ShippingScreen = () => {\n    const cart = useSelector(state =>state.cart)\n    const {shippingAddress} = cart\n  let history = useNavigate()\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n      e.preventDefault()\n      dispatch(saveShoppingAddress({address,city,postalCode,country}))\n      history('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2/>\n      <h1>Shipping Details</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className='mb-2' controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter Address'\n            value={address}\n            required\n            onChange={(e) => {\n              setAddress(e.target.value)\n            }}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group className='mb-2' controlId='city '>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter City'\n            value={city}\n            required\n            onChange={(e) => {\n              setCity(e.target.value)\n            }}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group className='mb-2' controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter Postal Code'\n            value={postalCode}\n            required\n            onChange={(e) => {\n              setPostalCode(e.target.value)\n            }}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group className='mb-2' controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter Country'\n            value={country}\n            required\n            onChange={(e) => {\n              setCountry(e.target.value)\n            }}\n          ></Form.Control>\n        </Form.Group>\n\n            <Button type='submit' variant='primary'>\n                Continue \n            </Button>\n\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n"]},"metadata":{},"sourceType":"module"}